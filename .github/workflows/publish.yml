name: Publish to npm

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty to use package.json version)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Update npm
        run: npm install -g npm@latest
          
      - name: Install dependencies
        run: npm ci
        
      - name: Run linting
        run: npm run lint
        
      - name: Build package
        run: npm run build --if-present
        
      - name: Run tests
        run: npm test
      
      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ -n "${{ github.ref_name }}" ]; then
            # For tag pushes, extract version from tag
            VERSION="${{ github.ref_name }}"
            VERSION="${VERSION#v}"  # Remove 'v' prefix if present
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            # For manual triggers with version input
            VERSION="${{ github.event.inputs.version }}"
            npm version $VERSION --no-git-tag-version
          else
            # Default to package.json version
            VERSION=$(node -p "require('./package.json').version")
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
          echo "Detected version: $VERSION"
        
      - name: Publish to npm
        run: npm publish --access public
          
      # Only create release for manual triggers, not for tag pushes
      # (tag pushes are usually created by the release workflow)
      - name: Create GitHub Release (manual trigger only)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          release_name: Release ${{ steps.version.outputs.tag }}
          body: |
            ## Changes
            
            Manual release of version ${{ steps.version.outputs.version }}
            
            ## Installation
            
            ```bash
            npx -y @djankies/vitest-mcp@${{ steps.version.outputs.version }}
            ```
          draft: false
          prerelease: false